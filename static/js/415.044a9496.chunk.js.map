{"version":3,"file":"static/js/415.044a9496.chunk.js","mappings":"oMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,OAFCD,EADC,OAUnB,C,yGCmBD,UAlCa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGhBN,EAAUM,EAAKC,SAHC,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yBAOhBR,GAAa,GAPG,4EAAH,qDAUjBE,GACD,GAAE,IAECH,GAEA,0BACE,0CAMJ,6BACE,uCACA,SAAC,IAAD,CAAYX,OAAQA,MAGzB,C,uKChCKqB,EACI,6CADJA,EAEM,kBAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QATc,oCAYT,IAAMR,EAAmB,mCAAG,oGACVO,EAAAA,EAAAA,IAAA,uBADU,cAC3BE,EAD2B,yBAE1BA,EAASR,MAFiB,2CAAH,qDAKnBS,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,uBACLD,EADK,kBACkBK,IAFV,cACzBF,EADyB,yBAIxBA,EAASR,KAAKC,SAJU,2CAAH,sDAOjBU,EAAiB,mCAAG,WAAMvB,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAyBiB,IADjB,cACzBG,EADyB,yBAExBA,EAASR,MAFe,2CAAH,sDAKjBY,EAAiB,mCAAG,WAAMxB,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,oBAAiCiB,IADzB,cACzBG,EADyB,yBAExBA,EAASR,KAAKa,MAFU,2CAAH,qD","sources":["components/Movies/MoviesList.jsx","pages/Home.jsx","service/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMoviesTrending } from '../service/fetchMovies';\nimport { MoviesList } from '../components/Movies/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await fetchMoviesTrending();\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div>\n        <h1>Loding....</h1>\n      </div>\n    );\n  }\n\n  return (\n    <main>\n      <h1>HOME PAGE</h1>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '740dee1bffaa9bd60e4b0e1462b3e0c6';\n\nconst params = {\n  search: '&language=en-US&page=1&include_adult=false',\n  language: '&language=en-US',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchMoviesTrending = async () => {\n  const responce = await axios.get(`trending/movie/day?`);\n  return responce.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const responce = await axios.get(\n    `search/movie?${params.search}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`movie/${id}?${params.language}`);\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(`movie/${id}/credits?${params.language}`);\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(`movie/${id}/credits?${params.language}`);\n  return responce.data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","fetchMoviesTrending","data","results","console","log","message","params","axios","api_key","responce","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}