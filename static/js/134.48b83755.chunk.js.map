{"version":3,"file":"static/js/134.48b83755.chunk.js","mappings":"oMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,OAFCD,EADC,OAUnB,C,sFCkCD,UAhDe,WACb,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SAEhCD,IAILE,EAAAA,EAAAA,IAAkBF,GACfG,KAAKR,GACLS,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IACXE,QAAQb,EAASM,GACrB,GAAE,CAACH,IAWJ,OACE,iCACE,mCACA,kBAAMW,SARW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgB,CAAEL,MAAAA,GACnB,EAKG,WACE,kBAAOkB,QAAQ,GAAf,UACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOvB,EACPwB,SApBW,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCtB,EAASsB,EACV,OAqBK,mBAAQJ,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAY7B,OAAQA,MAGzB,C,uKC/CKoC,EACI,6CADJA,EAEM,kBAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QATc,oCAYT,IAAMC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,uBADU,cAC3BG,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,qDAKnBtB,EAAiB,mCAAG,WAAMT,GAAN,uFACR2B,EAAAA,EAAAA,IAAA,uBACLD,EADK,kBACkB1B,IAFV,cACzB8B,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMvC,GAAN,uFACRiC,EAAAA,EAAAA,IAAA,gBAAmBjC,EAAnB,YAAyBgC,IADjB,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBG,EAAiB,mCAAG,WAAMxC,GAAN,uFACRiC,EAAAA,EAAAA,IAAA,gBAAmBjC,EAAnB,oBAAiCgC,IADzB,cACzBI,EADyB,yBAExBA,EAASC,KAAKI,MAFU,2CAAH,qD","sources":["components/Movies/MoviesList.jsx","pages/Movies.jsx","service/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from '../service/fetchMovies';\nimport { MoviesList } from '../components/Movies/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchSearchMovies(searchQuery)\n      .then(setMovies)\n      .catch(error => console.error(error))\n      .finally(setQuery(searchQuery));\n  }, [searchParams]);\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <h1>TITLE</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={query}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">submit</button>\n      </form>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '740dee1bffaa9bd60e4b0e1462b3e0c6';\n\nconst params = {\n  search: '&language=en-US&page=1&include_adult=false',\n  language: '&language=en-US',\n};\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchMoviesTrending = async () => {\n  const responce = await axios.get(`trending/movie/day?`);\n  return responce.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const responce = await axios.get(\n    `search/movie?${params.search}&query=${query}`\n  );\n  return responce.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const responce = await axios.get(`movie/${id}?${params.language}`);\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const responce = await axios.get(`movie/${id}/credits?${params.language}`);\n  return responce.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const responce = await axios.get(`movie/${id}/credits?${params.language}`);\n  return responce.data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","fetchSearchMovies","then","catch","error","console","finally","onSubmit","e","preventDefault","htmlFor","type","autoComplete","autoFocus","placeholder","value","onChange","target","params","axios","api_key","fetchMoviesTrending","responce","data","results","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}